{"version":3,"sources":["components/LandingPage/LandingPage.js","components/Home/Home.js","App.js","reportWebVitals.js","reducer/index.js","store/index.js","index.js"],"names":["LandingPage","to","Home","App","className","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","countries","rootReducer","state","action","type","payload","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAIe,SAASA,IACpB,OACI,gCACI,2CACA,cAAC,IAAD,CAAMC,GAAI,QAAV,SACI,mDCAD,SAASC,IAsBpB,OACI,8BAKI,8BAAK,+C,qBCjBFC,MAdf,WACE,OACC,cAAC,IAAD,UACC,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAACP,EAAD,MAC/B,cAAC,IAAD,CAAQM,KAAK,QAAQC,QAAS,cAACL,EAAD,MAC9B,cAAC,IAAD,CAAQI,KAAK,YAAYC,QAAS,cAAC,IAAD,cCDzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8BCNRQ,EAAe,CACjBC,UAAW,IAgBAC,MAdf,WAAiD,IAA5BC,EAA2B,uDAArBH,EAAcI,EAAO,uCAC5C,MACS,kBADFA,EAAOC,KAEC,2BACAF,GADP,IAEIF,UAAWG,EAAOE,UAIfH,GCRNI,EAAQC,sBACjBN,EACAO,8BAAoBC,0BAAgBC,O,QCCxCC,IAASC,OACP,eAAC,IAAD,CAAUN,MAAOA,EAAjB,UACA,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,MAFF,OAKAC,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.f857e579.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function LandingPage(){\r\n    return (\r\n        <div>\r\n            <h1>Countries</h1>\r\n            <Link to ='/home'>\r\n                <button>Ingresar</button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n// import { Fragment } from 'react';\r\n// import { useDispatch, useSelector } from 'react'; \r\n// import { useEffect, useState } from 'react';\r\n//import {getCountries} from  '../../actions/index.js';\r\n// import {Link} from 'react-router-dom';\r\n\r\n// import Card from '../Card/Card.js';\r\n\r\nexport default function Home(){\r\n\r\n// //me creo una constante para ir despachando las acciones a mi store\r\n//     const dispatch= useDispatch();\r\n\r\n//     // me creo una constante para traerme todo lo que esta en el estado de countries (mapStateToProps)\r\n//     const countries = useSelector(state => state.countries);\r\n\r\n//     //traerme del estado,  countries cuando el componente se monta\r\n//     //despacho la accion invocada (mapDispatchToProps)\r\n//     useEffect(()=>{\r\n//         dispatch(getCountries());\r\n//     },[dispatch]);\r\n//    //el [] es para que se ejecute solo una vez \r\n//    //el [dispatch] es para que se ejecute cada vez que se haga un dispatch\r\n\r\n//    function handleClick(e){\r\n//        e.preventDefault();\r\n//        dispatch(getCountries());\r\n//        //que me vuelva a traer todo lo que esta en el estado de countries\r\n//    }\r\n\r\n    return(\r\n        <div>\r\n            {/* <Link to=\"/activity\">\r\n                <button>Create Activity</button>\r\n            </Link> */}\r\n\r\n            <div><h1>Countries</h1></div>\r\n\r\n{/*<button onClick={e=> handleClick(e)}>Volver a cargar Countries</button>\r\n\r\n<div>\r\n    <select>\r\n    <option value=\"All\">All Continents</option>\r\n    <option value=\"Europe\">Europe</option>\r\n    <option value=\"Americas\">America</option>\r\n    <option value=\"Asia\">Asia</option>\r\n    <option value=\"Oceania\">Oceania</option>\r\n    <option value=\"Africa\">Africa</option>\r\n    </select>\r\n</div>\r\n\r\n<div>\r\n    <select>\r\n    <option value=\"population(men-may)\">Poblacion de menor a mayor</option>\r\n            <option value=\"population(may-men)\">Poblacion de mayor a menor</option>\r\n    </select>\r\n</div>\r\n\r\n<div>\r\n    <select>\r\n    <option value=\"asc(a-z)\"> Por orden alfabetico ascendente</option>\r\n    <option value=\"desc(z-a)\">Por orden alfabetico descendente</option> \r\n    </select>\r\n</div>\r\n\r\n\r\n{\r\ncountries?.map((el) => {\r\n            return(\r\n                <Fragment>\r\n            \r\n                <Link to={'/countries/' + el.id}>\r\n                <Card  image={el.image} name={el.name} continent={el.continent} key={el.id}/>\r\n                </Link>\r\n                </Fragment>\r\n                \r\n            )})}  */}\r\n\r\n            </div>\r\n\r\n        \r\n\r\n    )\r\n}\r\n\r\n","import './App.css';\nimport {BrowserRouter,Routes,Route} from 'react-router-dom';\nimport LandingPage from './components/LandingPage/LandingPage';\nimport Home from './components/Home/Home';\nimport ActivityCreated from './components/ActivityCreated/ActivityCreated';\n\nfunction App() {\n  return (\n   <BrowserRouter>\n    <div className=\"App\">\n      <Routes>\n      <Route exact path='/' element={<LandingPage/>}/>\n      <Route  path='/home' element={<Home/>}/>\n      <Route  path='/activity' element={<ActivityCreated/>}/>\n      </Routes>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initialState = {\r\n    countries: [],\r\n}\r\nfunction rootReducer(state=initialState, action){\r\n    switch(action.type){\r\n        case 'GET_COUNTRIES':\r\n            return {\r\n                ...state,\r\n                countries: action.payload,\r\n                //a mi estado countries que al inicio esta vacio, mandale todo lo que me trae la accion GET_COUNTRIES\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}   \r\n\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from '../reducer';\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}